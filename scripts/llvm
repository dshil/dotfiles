#!/bin/bash
#
# Downloads and installs the specified LLVM version.
#
# Requirements:
#  * Tool chain: svn, cmake, make, gcc, g++.
#  * Platform:
#     * Linux
#     * Windows (cygwin)
#
SUDO=sudo
if [[ "$OSTYPE" == "cygwin" ]]; then
    SUDO=
fi

function download()
{
    local release=$1
    local srcdir=$2

    mkdir -p $srcdir
    svn co http://llvm.org/svn/llvm-project/llvm/tags/$release/final $srcdir
    pushd $srcdir/tools
        svn co http://llvm.org/svn/llvm-project/cfe/tags/$release/final clang
    popd # $srcdir
}

function install()
{
    local release=$1
    local srcdir=$2
    local build_dir=$3
    local parallelism=$4

    mkdir -p $build_dir
    pushd $build_dir
        cmake -G "Unix Makefiles" \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_C_COMPILER=/usr/bin/gcc \
            -DCMAKE_CXX_COMPILER=/usr/bin/g++ \
            -DCMAKE_ASM_COMPILER=/usr/bin/gcc \
            $srcdir
        make -j$parallelism
        $SUDO make -j$parallelism install
    popd # $build_dir
}

help="LLVM downloader and installer

Usage: llvm [OPTIONS]

Options:

-r, --release - LLVM release id in format: RELEASE_600 (LLVM 6.0.0)
-s, --source-path - path where to download LLVM sources
-b, --build-path - path where store the compilation result
-p, --parallelism - value for make -j option
-h, --help - print this message"

while [[ "$#" > 0 ]]; do case $1 in
  -r|--release) release="$2"; shift;;
  -s|--source-path) srcdir=$2; shift;;
  -b|--build-path) build_dir=$2; shift;;
  -p|--parallelism) parallelism=$2 shift;;
  -h|--help) echo "$help"; exit 0;;
  *) echo "unknown parameter passed: $1"; exit 1;;
esac; shift; done

set -xe

if [ -z "$release" ]; then
    release=RELEASE_700
fi
if [ -z "$srcdir" ]; then
    srcdir=$HOME/src/llvm_$release
fi
if [ -z "$build_dir" ]; then
    build_dir=$HOME/build/llvm_$release
fi
if [ -z "$parallelism" ]; then
    parallelism=8
fi

download  "$release" "$srcdir"
install "$release" "$srcdir" "$build_dir" "$parallelism"
